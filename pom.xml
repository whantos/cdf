<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-ce-jar-parent-pom</artifactId>
    <version>1.1.7</version>
    <relativePath></relativePath>
  </parent>
  <groupId>pentaho</groupId>
  <artifactId>cdf-plugin</artifactId>
  <version>6.1.0.11-324</version>
  <packaging>pom</packaging>
  <modules>
    <module>core</module>
    <module>core-js</module>
    <module>pentaho</module>
    <module>pentaho-js</module>
    <module>assemblies</module>
  </modules>
  <scm>
    <connection>scm:git:git@github.com:webdetails/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:webdetails/${project.artifactId}.git</developerConnection>
    <url>scm:git:git@github.com:webdetails/${project.artifactId}.git</url>
  </scm>
  <distributionManagement>
    <site>
      <id>pentaho.public.snapshot.repo</id>
      <name>${project.artifactId}-${project.version}</name>
      <url>dav:${site.publish.url}/${project.groupId}/cdf-plugin-${project.version}</url>
    </site>
  </distributionManagement>
  <properties>
    <do.documentation.javascript>false</do.documentation.javascript>
    <js.project.list></js.project.list>
    <docjs.config.file></docjs.config.file>
    <project.stage>master</project.stage>
    <documentation.javascript.root></documentation.javascript.root>
    <dependency.mockito-all.revision>1.8.4</dependency.mockito-all.revision>
    <dependency.orientdb.revision>1.5.0</dependency.orientdb.revision>
    <project.github-name>cdf</project.github-name>
    <global.require.file></global.require.file>
    <dependency.commons-io.revision>1.3</dependency.commons-io.revision>
    <requirejs.build.file></requirejs.build.file>
    <dependency.dom4j.revision>1.6.1</dependency.dom4j.revision>
    <dependency.cpf.revision>${project.version}</dependency.cpf.revision>
    <dependency.frontend-maven-plugin.revision>0.0.26</dependency.frontend-maven-plugin.revision>
    <dependency.commons-logging.revision>1.1</dependency.commons-logging.revision>
    <requirejs.config.files.pattern></requirejs.config.files.pattern>
    <dependency.servlet-api.revision>2.4</dependency.servlet-api.revision>
    <dependency.json.revision>6.1.0.11-324</dependency.json.revision>
    <dependency.commons-lang.revision>2.2</dependency.commons-lang.revision>
    <dependency.hibernate.revision>3.2.6.ga</dependency.hibernate.revision>
    <dependency.ccc.revision>${project.version}</dependency.ccc.revision>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>pentaho</groupId>
        <artifactId>cpf-core</artifactId>
        <version>${dependency.cpf.revision}</version>
      </dependency>
      <dependency>
        <groupId>pentaho</groupId>
        <artifactId>cpf-pentaho</artifactId>
        <version>${dependency.cpf.revision}</version>
      </dependency>
      <dependency>
        <groupId>pentaho</groupId>
        <artifactId>ccc</artifactId>
        <version>${dependency.ccc.revision}</version>
        <type>zip</type>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${dependency.commons-logging.revision}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${dependency.commons-io.revision}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${dependency.commons-lang.revision}</version>
      </dependency>
      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>${dependency.dom4j.revision}</version>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${dependency.json.revision}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate</artifactId>
        <version>${dependency.hibernate.revision}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>commons-collections</artifactId>
            <groupId>commons-collections</groupId>
          </exclusion>
          <exclusion>
            <artifactId>dom4j</artifactId>
            <groupId>dom4j</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${dependency.servlet-api.revision}</version>
      </dependency>
      <dependency>
        <groupId>com.orientechnologies</groupId>
        <artifactId>orient-commons</artifactId>
        <version>${dependency.orientdb.revision}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.orientechnologies</groupId>
        <artifactId>orientdb-core</artifactId>
        <version>${dependency.orientdb.revision}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.orientechnologies</groupId>
        <artifactId>orientdb-server</artifactId>
        <version>${dependency.orientdb.revision}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.orientechnologies</groupId>
        <artifactId>orientdb-client</artifactId>
        <version>${dependency.orientdb.revision}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.orientechnologies</groupId>
        <artifactId>orientdb-enterprise</artifactId>
        <version>${dependency.orientdb.revision}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${dependency.mockito-all.revision}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <profiles>
    <profile>
      <id>javascript-assembly</id>
      <activation>
        <file>
          <exists>${basedir}/src/assembly/descriptors/js.assembly.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>package-js-artifact</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${basedir}/src/assembly/descriptors/js.assembly.xml</descriptor>
                  </descriptors>
                  <appendAssemblyId>false</appendAssemblyId>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>javascript-build</id>
      <activation>
        <file>
          <exists>${basedir}/src/main/javascript/config/${requirejs.build.file}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-js-dependencies</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeArtifactIds>pentaho-js-build,${js.project.list}</includeArtifactIds>
                  <includes>**/**</includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>override-profileBuilder</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/dependency/pentaho-js-build</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/javascript/config/</directory>
                      <filtering>true</filtering>
                      <includes>
                        <include>profileBuilder.js</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>Generate RequireCfg</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <concat append="true" force="yes" destfile="${project.build.directory}/requireCfg.js">
                      <file file="${basedir}/src/main/javascript/config/context.js" />
                      <fileset dir="${basedir}/target/dependency/" casesensitive="yes">
                        <include name="${requirejs.config.files.pattern}" />
                      </fileset>
                    </concat>
                    <path id="build.classpath">
                      <fileset dir="${basedir}/target/dependency/pentaho-js-build/libs">
                        <include name="*.jar" />
                      </fileset>
                    </path>
                    <java fork="true" classname="org.mozilla.javascript.tools.shell.Main" classpathref="build.classpath">
                      <arg value="${basedir}/target/dependency/pentaho-js-build/profileBuilder.js" />
                    </java>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.bringking</groupId>
            <artifactId>requirejs-maven-plugin</artifactId>
            <version>2.0.4</version>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>optimize</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <configFile>${basedir}/src/main/javascript/config/${requirejs.build.file}</configFile>
              <filterConfig>true</filterConfig>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>pentaho</groupId>
          <artifactId>pentaho-js-build</artifactId>
          <version>1.0.0</version>
          <type>zip</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>javascript-test</id>
      <activation>
        <file>
          <exists>${basedir}/src/test/javascript</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-js-dependencies</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeArtifactIds>${js.project.list}</includeArtifactIds>
                  <includes>**/**</includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-javascript-sources</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/test-javascript</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/javascript</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>${dependency.frontend-maven-plugin.revision}</version>
            <executions>
              <execution>
                <id>install-node-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>v0.12.4</nodeVersion>
                  <npmVersion>2.10.1</npmVersion>
                </configuration>
              </execution>
              <execution>
                <id>npm-install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
              </execution>
              <execution>
                <id>javascript-tests</id>
                <goals>
                  <goal>karma</goal>
                </goals>
                <configuration>
                  <karmaConfPath>${basedir}/src/test/javascript/config/${karma.file.config}</karmaConfPath>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <karma.file.config>karma.ci.conf.js</karma.file.config>
      </properties>
    </profile>
    <profile>
      <id>javascript-doc</id>
      <activation>
        <file>
          <exists>${basedir}/src/doc/javascript/config/${docjs.config.file}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-assembly-resources</id>
                <phase>pre-site</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <overwrite>true</overwrite>
                  <outputDirectory>${basedir}/target/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/doc/javascript/config</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>com.phasebash.jsdoc</groupId>
            <artifactId>jsdoc3-maven-plugin</artifactId>
            <version>1.2.0</version>
            <configuration>
              <configFile>${basedir}/target/${docjs.config.file}</configFile>
              <sourceFiles>
                <sourceFile>${basedir}/target/${docjs.config.file}</sourceFile>
              </sourceFiles>
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>aggregate-reporting</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <reporting>
        <plugins>
          <plugin>
            <artifactId>maven-jxr-plugin</artifactId>
            <reportSets>
              <reportSet>
                <id>aggregate-jxr</id>
                <reports>
                  <report>aggregate</report>
                </reports>
                <inherited>false</inherited>
              </reportSet>
            </reportSets>
            <configuration>
              <linkJavadoc>true</linkJavadoc>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <reportSets>
              <reportSet>
                <id>aggregate-javadoc</id>
                <reports>
                  <report>aggregate</report>
                </reports>
                <inherited>false</inherited>
              </reportSet>
            </reportSets>
            <configuration>
              <failOnError>false</failOnError>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <reportSets>
              <reportSet>
                <id>aggregate-checkstyle</id>
                <reports>
                  <report>checkstyle-aggregate</report>
                </reports>
                <inherited>false</inherited>
              </reportSet>
            </reportSets>
            <configuration>
              <configLocation>${checkstyle-config-url}</configLocation>
              <propertiesLocation>${checkstyle-properties-url}</propertiesLocation>
              <linkXRef>true</linkXRef>
              <cacheFile />
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>
</project>
